import{r as n,o as d,c as a,a as e,b as t,F as i,d as o,e as r}from"./app.62f6e408.js";import{_ as c}from"./plugin-vue_export-helper.21dcd24c.js";const l={},p=e("h1",{id:"contributing-guide",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#contributing-guide","aria-hidden":"true"},"#"),o(" Contributing Guide")],-1),h=e("h2",{id:"overview",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#overview","aria-hidden":"true"},"#"),o(" Overview")],-1),u=o("This repository employs a "),_={href:"https://en.wikipedia.org/wiki/Monorepo",target:"_blank",rel:"noopener noreferrer"},b=o("monorepo"),f=o(" setup with "),v={href:"https://classic.yarnpkg.com/en/docs/workspaces",target:"_blank",rel:"noopener noreferrer"},y=o("yarn classic workspaces"),m=o(", and hosts a number of associated but separated packages in the "),g=e("code",null,"packages",-1),w=o(" directory:"),k=r('<ul><li><p><code>@vuepress/core</code>: The VuePress core. Provides pure Node API to generate VuePress app, including page handling, plugin system and data preparation.</p></li><li><p><code>@vuepress/client</code>: The VuePress client package. Provides the client entry, and exports types and composable utils that can be used in client side development.</p></li><li><p><code>@vuepress/bundler-vite</code>: The VuePress bundler package with vite. Use vite to <code>dev</code> and <code>build</code> VuePress app that generated by <code>@vuepress/core</code>.</p></li><li><p><code>@vuepress/bundler-webpack</code>: The VuePress bundler package with webpack. Use webpack to <code>dev</code> and <code>build</code> VuePress app that generated by <code>@vuepress/core</code>.</p></li><li><p><code>@vuepress/cli</code>: The VuePress command line interface (CLI) package. It will resolve user config file, and create VuePress app with <code>@vuepress/core</code>, then use <code>@vuepress/bundler-${name}</code> to execute corresponding command.</p></li><li><p><code>@vuepress/theme-default</code>: The VuePress default theme.</p></li><li><p><code>@vuepress/plugin-${name}</code>: Official plugins.</p></li><li><p><code>@vuepress/shared</code>: Utilities that shared between node side and client side.</p></li><li><p><code>@vuepress/utils</code>: Utilities that should only be used in node side.</p></li><li><p><code>vuepress</code>: A wrapper of <code>vuepress-vite</code>.</p></li><li><p><code>vuepress-vite</code>: A wrapper of <code>@vuepress/cli</code> + <code>@vuepress/bundler-vite</code> + <code>@vuepress/theme-default</code>. If users want to use default theme with vite, they can simply install this package.</p></li><li><p><code>vuepress-webpack</code>: A wrapper of <code>@vuepress/cli</code> + <code>@vuepress/bundler-webpack</code> + <code>@vuepress/theme-default</code>. If users want to use default theme with webpack, they can simply install this package.</p></li></ul><h2 id="development-setup" tabindex="-1"><a class="header-anchor" href="#development-setup" aria-hidden="true">#</a> Development Setup</h2><p>Pre-requirement:</p>',3),x={href:"http://nodejs.org",target:"_blank",rel:"noopener noreferrer"},P=o("Node.js"),T=o(),V=e("strong",null,"version 14+",-1),j={href:"https://classic.yarnpkg.com/en/docs/install",target:"_blank",rel:"noopener noreferrer"},S=o("Yarn v1 classic"),I=r(`<p>Clone the repo, and install dependencies:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">yarn</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>Start watching source files:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">yarn</span> dev
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>Open another terminal, and start developing the documentation site:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">yarn</span> docs:dev
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>Main tools that used in this project:</p>`,7),N={href:"https://www.typescriptlang.org/",target:"_blank",rel:"noopener noreferrer"},C=o("TypeScript"),E=o(" as the development language"),A={href:"https://jestjs.io/",target:"_blank",rel:"noopener noreferrer"},L=o("Jest"),U=o(" for unit testing"),Y={href:"https://eslint.org/",target:"_blank",rel:"noopener noreferrer"},B=o("ESLint"),D=o(" + "),O={href:"https://prettier.io/",target:"_blank",rel:"noopener noreferrer"},z=o("Prettier"),F=o(" for code linting and formatting"),G=r('<h2 id="scripts" tabindex="-1"><a class="header-anchor" href="#scripts" aria-hidden="true">#</a> Scripts</h2><h3 id="yarn-build" tabindex="-1"><a class="header-anchor" href="#yarn-build" aria-hidden="true">#</a> <code>yarn build</code></h3><p>The <code>build</code> script uses <code>tsc</code> to compile typescript source files to javascript dist files.</p><p>You may need to run this script first after your clone this repository, because the dist files are ignored by <code>.gitignore</code>.</p><h3 id="yarn-copy" tabindex="-1"><a class="header-anchor" href="#yarn-copy" aria-hidden="true">#</a> <code>yarn copy</code></h3><p>The <code>copy</code> script of root project runs <code>copy</code> script in all packages, copying some resources from source directory to dist directory.</p><p>Some source files (e.g. <code>.vue</code>, <code>.css</code> files) can not be processed by <code>build</code> script, but should keep the same relative path in the dist directory.</p><p>You may need to run this script after your clone this repository, too.</p><h3 id="yarn-dev" tabindex="-1"><a class="header-anchor" href="#yarn-dev" aria-hidden="true">#</a> <code>yarn dev</code></h3><p>The <code>dev</code> script runs <code>copy</code> and <code>build</code> scripts in watch mode.</p><h3 id="yarn-clean" tabindex="-1"><a class="header-anchor" href="#yarn-clean" aria-hidden="true">#</a> <code>yarn clean</code></h3><p>The <code>clean</code> script runs <code>clean</code> script in all packages, cleaning all the dist files and caches. In other words, it will remove all the files that generated by <code>build</code>, <code>copy</code> and <code>dev</code> scripts.</p><p>It&#39;s used before you want to re-build source files from a clean / initial state.</p><h3 id="yarn-docs" tabindex="-1"><a class="header-anchor" href="#yarn-docs" aria-hidden="true">#</a> <code>yarn docs:*</code></h3><h4 id="yarn-docs-build-yarn-docs-dev-yarn-docs-clean" tabindex="-1"><a class="header-anchor" href="#yarn-docs-build-yarn-docs-dev-yarn-docs-clean" aria-hidden="true">#</a> <code>yarn docs:build</code>, <code>yarn docs:dev</code>, <code>yarn docs:clean</code></h4><p>The <code>docs:</code> prefix indicates that these scripts are for documentation, i.e. the <code>docs</code> directory.</p><p>VuePress is using itself to build its own documentation site.</p><p>You need to run <code>yarn build &amp;&amp; yarn copy</code> to build VuePress source files first, then run these <code>docs:</code> scripts to develop and build our documentation.</p><h4 id="yarn-docs-serve" tabindex="-1"><a class="header-anchor" href="#yarn-docs-serve" aria-hidden="true">#</a> <code>yarn docs:serve</code></h4><p>Serve the documentation site locally.</p><p>You need to run <code>yarn docs:build</code> first to generate the documentation dist files, and then run <code>yarn docs:serve</code> to serve them.</p><h3 id="yarn-lint" tabindex="-1"><a class="header-anchor" href="#yarn-lint" aria-hidden="true">#</a> <code>yarn lint</code></h3><p>The <code>lint</code> script uses ESLint to check all source files.</p><h3 id="yarn-test" tabindex="-1"><a class="header-anchor" href="#yarn-test" aria-hidden="true">#</a> <code>yarn test</code></h3><p>The <code>test</code> script uses Jest to run unit testings.</p><h2 id="documentation" tabindex="-1"><a class="header-anchor" href="#documentation" aria-hidden="true">#</a> Documentation</h2><p>VuePress documentation is powered by VuePress itself, which is built from the source code of this repository.</p><p>All the markdown source files are placed in <code>docs</code> directory. We are maintaining two translations:</p><ul><li>English (en-US) in <code>/</code> path</li><li>Chinese (zh-CN) in <code>/zh/</code> path</li></ul><p>We have two different deployments:</p>',30),J=o("Release deployment powered by "),M={href:"https://www.netlify.com",target:"_blank",rel:"noopener noreferrer"},W=o("Netlify"),$=o(". This deployment is built from the latest released version, so users will not see unreleased changes. The domain name is "),q={href:"https://v2.vuepress.vuejs.org",target:"_blank",rel:"noopener noreferrer"},H=o("https://v2.vuepress.vuejs.org"),R=o("."),K=o("Developer deployment powered by "),Q={href:"https://pages.github.com",target:"_blank",rel:"noopener noreferrer"},X=o("GitHub Pages"),Z=o(". This deployment is built from the latest commit, so developers could preview the latest changes. The domain name is "),ee={href:"https://vuepress.github.io",target:"_blank",rel:"noopener noreferrer"},oe=o("https://vuepress.github.io"),se=o(".");function te(re,ne){const s=n("ExternalLinkIcon");return d(),a(i,null,[p,h,e("p",null,[u,e("a",_,[b,t(s)]),f,e("a",v,[y,t(s)]),m,g,w]),k,e("ul",null,[e("li",null,[e("a",x,[P,t(s)]),T,V]),e("li",null,[e("a",j,[S,t(s)])])]),I,e("ul",null,[e("li",null,[e("a",N,[C,t(s)]),E]),e("li",null,[e("a",A,[L,t(s)]),U]),e("li",null,[e("a",Y,[B,t(s)]),D,e("a",O,[z,t(s)]),F])]),G,e("ul",null,[e("li",null,[J,e("a",M,[W,t(s)]),$,e("a",q,[H,t(s)]),R]),e("li",null,[K,e("a",Q,[X,t(s)]),Z,e("a",ee,[oe,t(s)]),se])])],64)}var ie=c(l,[["render",te]]);export{ie as default};
